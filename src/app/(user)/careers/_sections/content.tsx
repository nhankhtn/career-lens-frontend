'use client';

import {
  Box,
  Button,
  Chip,
  Fade,
  Grid,
  MenuItem,
  Paper,
  Select,
  Stack,
  TextField,
  Typography,
  IconButton,
} from '@mui/material';
import CloudUploadIcon from '@mui/icons-material/CloudUpload';
import FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';
import ArrowForwardIcon from '@mui/icons-material/ArrowForward';
import { useState } from 'react';
import { useRouter } from 'next/navigation';
import { paths } from '@/paths'; // ‚úÖ import paths

const CareerContent = () => {
  const router = useRouter();

  const allSkills = ['HTML', 'Python', 'C#', 'Figma', 'JavaScript', 'SQL'];
  const [selectedSkills, setSelectedSkills] = useState<string[]>(['HTML', 'Python', 'C#', 'Figma']);
  const [loading, setLoading] = useState(false);
  const [showCareers, setShowCareers] = useState(false);

  const handleAddSkill = (e: any) => {
    const newSkill = e.target.value;
    if (newSkill && !selectedSkills.includes(newSkill)) {
      setSelectedSkills([...selectedSkills, newSkill]);
    }
  };

  const handleRemoveSkill = (skillToRemove: string) => {
    setSelectedSkills(selectedSkills.filter((skill) => skill !== skillToRemove));
  };

  const handleAnalyze = () => {
    setLoading(true);
    setShowCareers(false);
    setTimeout(() => {
      setLoading(false);
      setShowCareers(true);
    }, 1500);
  };

  const handleSeeDetail = (careerId: string) => {
    const path = paths.career.detail.replace(':careerId', careerId);
    router.push(path);
  };

  return (
    <Stack spacing={6} py={4}>
      <Typography
        variant={"h5"}
        component="h1"
        fontWeight="bold"
        sx={{ fontSize: { xs: "1.5rem", sm: "2rem", md: "2.25rem" } }}
      >Ph√¢n t√≠ch ngh·ªÅ</Typography>

      <Paper
        sx={{
          borderRadius: 3,
          p: 4,
          backgroundColor: 'white',
          border: '1px solid #D6D9FF',
          boxShadow: 3,
          '&:hover': { boxShadow: 6, borderColor: '#6366F1' },
        }}
      >
        {/* Ph·∫ßn form */}
        <Typography variant="h6" fontWeight="bold" mb={3}>Th√¥ng tin c∆° b·∫£n</Typography>
        <Stack direction="row" spacing={1} alignItems="center" mb={3}>
          <Typography fontWeight="bold">T·∫£i l√™n CV</Typography>
          <Typography color="text.secondary">(t√πy ch·ªçn)</Typography>
          <IconButton color="primary" size="small"><CloudUploadIcon /></IconButton>
        </Stack>

        <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} alignItems="flex-start" mb={2}>
          <Stack spacing={1} flex={1}>
            <Typography fontWeight="bold">K·ªπ nƒÉng hi·ªán c√≥</Typography>
            <Select
              displayEmpty
              value=""
              onChange={handleAddSkill}
              renderValue={() => 'K·ªπ nƒÉng'}
              fullWidth
            >
              {allSkills.map((skill) => (
                <MenuItem key={skill} value={skill}>{skill}</MenuItem>
              ))}
            </Select>
            <Stack direction="row" spacing={1} flexWrap="wrap">
              {selectedSkills.map((skill) => (
                <Chip
                  key={skill}
                  label={skill}
                  onDelete={() => handleRemoveSkill(skill)}
                  sx={{ backgroundColor: '#6366F1', color: 'white' }}
                />
              ))}
            </Stack>
          </Stack>

          <Stack spacing={1} flex={1}>
            <Typography variant="body2" color="text.secondary" mt={2}>
              <u>Ban ch∆∞a bi·∫øt m√¨nh c√≥ k·ªπ nƒÉng g√¨ ?</u>
            </Typography>
            <Button variant="outlined" fullWidth>
              ‚Æê L√†m b√†i tr·∫Øc nghi·ªám t·ª± ƒë√°nh gi√°
            </Button>
          </Stack>
        </Stack>

        <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} mt={2}>
          <Stack spacing={2} flex={1}>
            <TextField select label="Kinh nghi·ªám l√†m vi·ªác" defaultValue="Sinh vi√™n nƒÉm 3" fullWidth>
              <MenuItem value="Sinh vi√™n nƒÉm 1">Sinh vi√™n nƒÉm 1</MenuItem>
              <MenuItem value="Sinh vi√™n nƒÉm 2">Sinh vi√™n nƒÉm 2</MenuItem>
              <MenuItem value="Sinh vi√™n nƒÉm 3">Sinh vi√™n nƒÉm 3</MenuItem>
              <MenuItem value="ƒê√£ ƒëi l√†m">ƒê√£ ƒëi l√†m</MenuItem>
            </TextField>
            <TextField select label="L√†m vi·ªác v·ªõi lƒ©nh v·ª±c" defaultValue="D·ªØ li·ªáu" fullWidth>
              <MenuItem value="D·ªØ li·ªáu">D·ªØ li·ªáu</MenuItem>
              <MenuItem value="Thi·∫øt k·∫ø">Thi·∫øt k·∫ø</MenuItem>
              <MenuItem value="Ph·∫ßn m·ªÅm">Ph·∫ßn m·ªÅm</MenuItem>
            </TextField>
          </Stack>

          <Stack spacing={2} flex={1}>
            <TextField select label="Chuy√™n ng√†nh h·ªçc t·∫≠p" defaultValue="K·ªπ thu·∫≠t ph·∫ßn m·ªÅm" fullWidth>
              <MenuItem value="K·ªπ thu·∫≠t ph·∫ßn m·ªÅm">K·ªπ thu·∫≠t ph·∫ßn m·ªÅm</MenuItem>
              <MenuItem value="Thi·∫øt k·∫ø ƒë·ªì h·ªça">Thi·∫øt k·∫ø ƒë·ªì h·ªça</MenuItem>
              <MenuItem value="Khoa h·ªçc d·ªØ li·ªáu">Khoa h·ªçc d·ªØ li·ªáu</MenuItem>
            </TextField>
            <TextField select label="M·ª©c l∆∞∆°ng mong mu·ªën" defaultValue="7 - 8 tri·ªáu" fullWidth>
              <MenuItem value="5 - 6 tri·ªáu">5 - 6 tri·ªáu</MenuItem>
              <MenuItem value="7 - 8 tri·ªáu">7 - 8 tri·ªáu</MenuItem>
              <MenuItem value="9 - 10 tri·ªáu">9 - 10 tri·ªáu</MenuItem>
            </TextField>
          </Stack>
        </Stack>

        <Box display="flex" justifyContent="flex-end" mt={5}>
          <Button
            variant="contained"
            endIcon={<ArrowForwardIcon />}
            onClick={handleAnalyze}
            sx={{ backgroundColor: '#6366F1', textTransform: 'none', fontWeight: 'bold' }}
          >
            Ph√¢n t√≠ch ngh·ªÅ nghi·ªáp
          </Button>
        </Box>
      </Paper>

      {/* Loading */}
      {loading && (
        <Typography variant="body1" color="text.secondary" align="center" sx={{ mt: 4 }}>
          üîÑ ƒêang ph√¢n t√≠ch ngh·ªÅ nghi·ªáp ph√π h·ª£p...
        </Typography>
      )}

      {/* Danh s√°ch ngh·ªÅ nghi·ªáp */}
      <Fade in={showCareers} timeout={600}>
        <Stack spacing={2}>
          <Typography variant="h6" fontWeight="bold">Ngh·ªÅ nghi·ªáp ph√π h·ª£p</Typography>
          <Grid container spacing={2}>
            {[1, 2, 3, 4].map((_, index) => (
              <Grid item xs={12} sm={6} key={index}>
                <Paper
                  elevation={3}
                  sx={{
                    borderRadius: 3,
                    p: 2,
                    backgroundColor: 'white',
                    border: '1px solid #D6D9FF',
                    transition: 'transform 0.2s, boxShadow 0.2s',
                    '&:hover': {
                      transform: 'translateY(-4px)',
                      boxShadow: 6,
                      borderColor: '#6366F1',
                    },
                  }}
                >
                  <Typography fontWeight="bold">Chuy√™n vi√™n ph√¢n t√≠ch d·ªØ li·ªáu (Data Analyst)</Typography>
                  <Typography variant="body2" mt={1}>
                    <strong>M√¥ t·∫£ ng·∫Øn:</strong> Ch·ªãu tr√°ch nhi·ªám thu th·∫≠p, x·ª≠ l√Ω v√† ph·∫£n √°nh d·ªØ li·ªáu
                  </Typography>
                  <Stack direction="row" spacing={1} mt={1} flexWrap="wrap">
                    <Typography variant="body2" fontWeight="bold" mr={1}>K·ªπ nƒÉng c·∫ßn c√≥:</Typography>
                    {["Figma", "AdobeXD", "Excel", "Python"].map((tag) => (
                      <Chip key={tag} label={tag} size="small" />
                    ))}
                  </Stack>
                  <Typography variant="body2" mt={1}>
                    <strong>L·ªô tr√¨nh h·ªçc t·∫≠p:</strong> 3 giai ƒëo·∫°n t·ª´ c∆° b·∫£n ƒë·∫øn d·ª± √°n th·ª±c t·∫ø
                  </Typography>
                  <Stack direction="row" justifyContent="space-between" alignItems="center" mt={2}>
                    <Button
                      startIcon={<FavoriteBorderIcon />}
                      variant="text"
                      sx={{ color: '#6366F1', fontWeight: 'bold' }}
                    >
                      Th√™m v√†o ∆∞u th√≠ch
                    </Button>
                    <Button
                      variant="contained"
                      endIcon={<ArrowForwardIcon />}
                      onClick={() => router.push(paths.career.detail.replace(':careerId', 'data-analyst'))}
                      sx={{
                        backgroundColor: '#6366F1',
                        fontWeight: 'bold',
                        '&:hover': { backgroundColor: '#4F46E5' },
                      }}
                    >
                      Xem chi ti·∫øt h∆°n
                    </Button>
                  </Stack>
                </Paper>
              </Grid>
            ))}
          </Grid>
        </Stack>
      </Fade>
    </Stack>
  );
};

export default CareerContent;
